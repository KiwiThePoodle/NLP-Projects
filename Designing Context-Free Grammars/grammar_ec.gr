# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are usually lowercase  (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars in questions 3 and 6, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  So how can your program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

3	ROOT	S .
1	ROOT	S !
1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#    PN = proper noun
#    Conj = conjunction
#    IV = intransitive verb
#    V_cognitive = cognitive verb (comes before "that")
#    V_mental = mental state verb (have people as object)
#    VP_mental = mental state verb phrase (just the verb phrase for mental state verb)
#    Adv = adverb
#    AP = adjective phrase
#    Det_vowel = an (determiner replacing a when preceding a vowel)
#    Noun_vowel = nouns that start with vowel
#    Adj_vowel = adjective that start with vowel
#    Adv_vowel = adverb that start with vowel
#    WH = WH-word
#    WH_subject = subject WH-word
#    WH_context = context WH-word
#    PV_sing = singular present tense verb
#    PV_plur = plural present tense verb
#    Noun_plur = plural noun
#    Det_plur = plural determiner (the)
#    NP_plur = plural noun phrase
#    VP_plur = plural verb phrase
#    Appos = appositive
#    NP_appos = noun phrase with an appositive

1	S	NP VP
1	VP	Verb NP
5	NP	Det Noun
2	NP	NP PP
1	PP	Prep NP
3	Noun    Adj Noun

# 1. Sally ate a sandwich .
1   NP  PN

# 2. Sally and the president wanted and ate a sandwich .
0.5   NP  NP Conj NP
0.5   Verb  Verb Conj Verb

# 3. The president sighed .
1   VP  IV

# 4. the president thought that a sandwich sighed .
0.5 VP  V_cognitive that S

1   VP_mental   V_mental NP

# 5. it perplexed the president that a sandwich ate Sally .
0.5 ROOT    it VP_mental that S .

# 6. that a sandwich ate Sally perplexed the president .
0.5 ROOT    that S VP_mental .

# 7. the very very very perplexed president ate a sandwich .
1   AP  Adj
0.5   AP  Adv AP
0.5 AP  AP Conj AP
1   NP  Det AP Noun

# 8. the president worked on every proposal on the desk .
0.5 VP  IV PP

# Question 4a

3 NP	Det_vowel Noun_vowel
1 NP  Det_vowel AP_vowel Noun
1 NP  Det_vowel AP_vowel Noun_vowel
0.5	Noun_vowel    Adj_vowel Noun
0.5	Noun_vowel    Adj_vowel Noun_vowel
1   AP_vowel  Adj_vowel
0.5   AP_vowel  Adv_vowel AP
0.5   AP_vowel  Adv_vowel AP_vowel

1	Noun    Adj Noun_vowel
1   AP  Adv AP_vowel
1   NP  Det AP Noun_vowel


# Question 4d

0.7   ROOT    I wonder WH NP IV .
0.7   ROOT    I wonder WH NP V_cognitive that S .
0.7   ROOT    I wonder WH_subject S Prep .
0.7   ROOT    I wonder WH_subject VP .
0.7   ROOT    I wonder WH_context S .


# Question 5 extra credit: singular vs plural agreement

1	S	NP_plur VP_plur
0.5	VP	PV_sing NP
0.5	VP_plur	PV_plur NP
0.5	VP	PV_sing NP_plur
0.5	VP_plur	PV_plur NP_plur
1	NP_plur	Det_plur Noun_plur
1	NP_plur	NP_plur PP
0.1   NP_plur  NP Conj NP
0.1   NP_plur  NP_plur Conj NP
0.1   NP_plur  NP Conj NP_plur
0.1   NP_plur  NP_plur Conj NP_plur

# Question 5 extra credit: appositives

1   Appos   NP
1   Appos   who VP
1   VP  Verb NP , Appos
1   NP_appos  NP , Appos ,
1	S	NP_appos VP


# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1	Verb	ate
3	Verb	wanted
1	Verb	kissed
1	Verb	understood
1	Verb	pickled
2   Verb    worked

1   PV_sing chooses
1   PV_sing becomes
1   PV_sing sees

1   PV_plur choose
1   PV_plur become
1   PV_plur see

3	Det	the
2	Det	a
1	Det	every

1   Det_plur    the

3	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1   Noun    proposal
1   Noun    desk

1   Noun_vowel  apple
1   Noun_vowel  elephant
1   Noun_vowel  iguana
1   Noun_vowel  owl
1   Noun_vowel  urchin

1   Noun_plur   citizens
1   Noun_plur   presidents
1   Noun_plur   sandwiches
1   Noun_plur   pickles
1   Noun_plur   floors
1   Noun_plur   proposals
1   Noun_plur   desks
1   Noun_plur   apples
1   Noun_plur   elephants
1   Noun_plur   iguanas
1   Noun_plur   owls
1   Noun_plur   urchins

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled

1   Adj_vowel   ambivalent
1   Adj_vowel   eager
1   Adj_vowel   interested
1   Adj_vowel   obtuse
1   Adj_vowel   unfriendly

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

1   PN  Sally

1   Conj    and

1   IV  sighed
1   IV  ate
1   IV  understood
1   IV  thought
1   IV  worked

1   V_cognitive thought
1   V_cognitive understood

1   V_mental    perplexed

1   Adv very

1   Adv_vowel   absolutely

1   Det_vowel   an

1   WH  who
1   WH  what
1   WH  when
1   WH  where
1   WH  why

1   WH_subject  who
1   WH_subject  what

1   WH_context  when
1   WH_context  where
1   WH_context  why

1   Appos   59 years old
